{"version":3,"sources":["Meal.js","MealList.js","App.js","reportWebVitals.js","index.js"],"names":["Meal","_ref","meal","_useState","useState","_useState2","Object","slicedToArray","imageUrl","setImageUrl","useEffect","fetch","concat","id","then","response","json","data","image","catch","console","log","react_default","a","createElement","title","src","alt","className","readyInMinutes","servings","href","sourceUrl","MealList","mealData","nutrients","calories","fat","carbohydrates","protein","meals","map","key","App","quote","setQuotes","_useState3","_useState4","author","setAuthor","_useState5","_useState6","setMealData","_useState7","_useState8","setCalories","res","content","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","type","placeholder","onChange","event","target","value","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.52b1c296.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Meal({ meal }) {\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    useEffect(() => {\n        fetch(`https://api.spoonacular.com/recipes/${meal.id}/information?apiKey=8d473af42f0c4a6f84a6a228086afb0a&includeNutrition=false`)\n            .then((response) => response.json())\n            .then((data) => {\n                setImageUrl(data.image);\n            })\n            .catch(() => {\n                console.log(\"Error\");\n            });\n    }, [meal.id])\n    return (\n        <article>\n            <h1> {meal.title} </h1>\n            <img src={imageUrl} alt=\"recipe\" />\n            <ul className=\"meal-instructions\">\n                <li>Preperation time: {meal.readyInMinutes} minutes</li>\n                <li>Number of servings: {meal.servings} </li>\n\n            </ul>\n            <a href={meal.sourceUrl}>Go to recipe</a>\n        </article>\n    )\n}","import React from \"react\";\nimport Meal from \"./Meal\"\n\nexport default function MealList({ mealData }) {\n    const nutrients = mealData.nutrients;\n    console.log(mealData)\n    return (<main>\n        <section className=\"nutrients\">\n            <h1>Macronutrients</h1>\n            <ul>\n                <li><strong>Calories:</strong> {nutrients.calories}</li>\n                <li><strong>Fats:</strong> {nutrients.fat}</li>\n                <li><strong>Carbohydrates:</strong> {nutrients.carbohydrates}</li>\n                <li><strong>Protein:</strong> {nutrients.protein}</li>\n            </ul>\n        </section>\n        <section className=\"meals\">\n            {mealData.meals.map((meal) => {\n                return <Meal key={meal.id} meal={meal} />;\n            })\n            }\n        </section>\n\n    </main>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport MealList from \"./MealList\";\nimport { Navbar, Container } from 'react-bootstrap';\n\nfunction App() {\n  const [quote, setQuotes] = useState('');\n  const [author, setAuthor] = useState('');\n  const [mealData, setMealData] = useState(null);\n  const [calories, setCalories] = useState(2000);\n\n  useEffect(() => {\n    let url = `http://api.quotable.io/random`;\n    fetch(url)\n      .then(res => res.json())\n      .then(quote => {\n        setQuotes(quote.content);\n        setAuthor(quote.author);\n        console.log(quote);\n      }\n      )\n  }, []);\n\n  function getMealData() {\n    fetch(`https://api.spoonacular.com/mealplanner/generate?apiKey=8d473af42f0c4a6f84a6a228086afb0a&timeFrame=day&targetCalories=${calories}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setMealData(data);\n        console.log(data)\n      })\n      .catch(() => {\n        console.log(\"error\");\n      })\n  }\n  function handleChange(event) {\n    setCalories(event.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand className=\"header\" href=\"#home\"><h1 className='header-main'>Calorie Based Meal Planning</h1></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </Container>\n      </Navbar>\n      <div className='quote'>\n        <h2 className='quote-text'>\"{quote}\"</h2>\n        <div className='author'><h3>-{author}</h3></div>\n      </div> <br />\n      <div><h2 className='blurb'>It is important to remember that regular exercise is only half of the equation to getting the body of your dreams. Consistent diet is crucial whether you are trying to gain muscle or lose fat.</h2></div>\n\n      <section className=\"control\">\n        <input\n          type=\"number\"\n          placeholder=\"Input Calories\"\n          onChange={handleChange} />\n      </section>\n      <button onClick={getMealData}> Get Daily Meal Plan </button>\n      {mealData && <MealList mealData={mealData} />}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}